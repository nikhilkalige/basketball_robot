<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="limited" default="false"/>
  <arg name="gzweb" default="false"/>

  <arg name="use_sim" default="false"/>

  <group if="$(arg use_sim)">
    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find bbbot_gazebo)/worlds/bbbot.world"/>
      <arg name="debug" value="$(arg debug)" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="paused" value="$(arg paused)"/>
      <arg name="use_sim_time" value="$(arg use_sim_time)"/>
      <arg name="headless" value="$(arg headless)"/>
      <arg name="verbose" value="true"/>
    </include>
  </group>

  <!-- Load the URDF into the ROS Parameter Server -->
  <group if="$(arg use_sim)">
    <param name="robot_description"
      command="$(find xacro)/xacro.py '$(find bbbot_description)/urdf/bbbot_gazebo.xacro'" />
  </group>
  <group unless="$(arg use_sim)">
    <param name="robot_description"
  	  command="$(find xacro)/xacro.py '$(find bbbot_description)/urdf/bbbot.xacro'" />
  </group>

  <!-- Load the joint names to enable filtering of the transmissions -->
  <rosparam command="load" file="$(find bbbot_gazebo)/config/leftarm_joint_names.yaml" ns="leftarm" />
  <rosparam command="load" file="$(find bbbot_gazebo)/config/rightarm_joint_names.yaml" ns="rightarm" />


  <group if="$(arg use_sim)">
    <rosparam command="load" file="$(find bbbot_gazebo)/config/leftarm_gazebo_control.yaml" ns="leftarm" />
    <rosparam command="load" file="$(find bbbot_gazebo)/config/rightarm_gazebo_control.yaml" ns="rightarm" />

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <group unless="$(arg gzweb)">
      <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
  	    args="-urdf -model bbbot -param robot_description"/>
    </group>

    <group if="$(arg gzweb)">
      <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-urdf -model bbbot -file /tmp/bbbot.gazebo.urdf -package_to_model" respawn="false" output="screen" >
        <param name="dummy_to_generate_gazebo_urdf_file"
          command="rosrun xacro xacro.py -o /tmp/bbbot.gazebo.urdf '$(find bbbot_description)/urdf/bbbot_gazebo.xacro'" />
        <param name="dummy_to_convert_package_to_model"
          command="sed -i s@package://@model://@g /tmp/bbbot.gazebo.urdf" />
      </node>
    </group>
  </group>

  <!-- ros_control rrbot launch file -->
  <!--include file="$(find rrbot_control)/launch/rrbot_control.launch" /-->

</launch>
